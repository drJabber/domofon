"""Typings for queries generated by aiosql"""

from typing import Dict, Optional, Sequence
import datetime
from asyncpg import Connection, Record

class UsersQueriesMixin:
    async def get_user_by_email(self, conn: Connection, *, email: str) -> Record: ...
    async def get_user_by_username(
        self, conn: Connection, *, username: str
    ) -> Record: ...
    async def create_new_user(
        self,
        conn: Connection,
        *,
        username: str,
        email: str,
        salt: str,
        hashed_password: str
    ) -> Record: ...
    async def update_user_by_username(
        self,
        conn: Connection,
        *,
        username: str,
        new_username: str,
        new_email: str,
        new_salt: str,
        new_password: str,
        new_bio: Optional[str],
        new_image: Optional[str]
    ) -> Record: ...

class ClientsQueriesMixin:
    async def get_client_by_client_id(
        self, conn: Connection, *, client_id: str
    ) -> Record: ...
    async def create_new_client(
        self,
        conn: Connection,
        *,
        client_id: str,
        salt: str,
        hashed_secret: str
    ) -> Record: ...
    async def update_client_by_client_id(
        self,
        conn: Connection,
        *,
        client_id: str,
        new_client_id: str,
        new_salt: str,
        new_secret: str,
    ) -> Record: ...

class DoorsQueriesMixin:
    async def get_door_by_door_id(
        self, conn: Connection, *, door_id: str
    ) -> Record: ...
    async def get_door_by_ext_door_id(
        self, conn: Connection, *, ext_door_id: str
    ) -> Record: ...
    async def create_new_door(
        self,
        conn: Connection,
        *,
        door_id: str,
        ext_door_id: str,
        ext_user: str,
        ext_password: str,
        access_token: Optional[str],
        refresh_token: Optional[str],
        access_token_expires: Optional[datetime.datetime]

    ) -> Record: ...
    async def update_door_by_door_id(
        self,
        conn: Connection,
        *,
        door_id: str,
        new_door_id: str,
        new_ext_door_id: str,
        new_ext_user: str,
        new_ext_password: str,
        new_access_token: Optional[str],
        new_refresh_token: Optional[str],
        new_access_token_expires: Optional[datetime.datetime]
    ) -> Record: ...



class Queries(
    UsersQueriesMixin,
    ClientsQueriesMixin,
    DoorsQueriesMixin,
): ...

queries: Queries
